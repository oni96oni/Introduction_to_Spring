회원 관리 예제 - 백엔드 개발 - 비즈니스 요구사항 정리
    일반적인 웹 애플리케이션 계층 구조
    컨트롤러 - 서비스 - 리포지토리 - DB - 도메인

    컨트롤러 - 웹 MVC의 컨트롤러 역할
    서비스 - 핵심 비즈니스 로직 구현 (ex. 회원 가입은 id 중복이 안된다. 등등)
    리포지토리 - 데이터베이스에 접근, 도메인 객체를 DB에 저장하고 관리
    도메인 - 비즈니스 도메인 객체 (ex. 회원, 주문, 쿠폰 등등 주로 데이터베이스에 저장하고 관리됨)

    클래스 의존관계
    회원 비즈니스 로직에는 회원 서비스, 회원저장리포지토리는 인터페이스를 만들고 구현체는 메모리로 단순하게 할수있게끔 제작할것

    아직 데이터 저장소가 선정되지 않아서, 우선 인터페이스로 구현 클래스를 변경할 수 있도록 설계
    데이터 저장소는 RDB, NoSQL 등등 다양한 저장소를 고민중인 상황으로 가정
    개발을 진행하기 위해서 초기 개발 단계에서는 구현체로 가벼운 메모리 기반의 데이터 저장소 사용